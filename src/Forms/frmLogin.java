/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Entity.DrugsReport;
import Entity.TransactionsReport;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import pharmacysystem.Tool;
import pharmacysystem.Tool.Table;

/**
 *
 * @author hp-
 */
public class frmLogin extends javax.swing.JFrame {

    /**
     * Creates new form frmlogin
     */
    public frmLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngroup = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtusername = new controls.JTextBox(20);
        txtpassword = new controls.JPasswordBox(20);
        login = new controls.JMyButton();
        exit = new controls.JMyButton();
        lbllog = new javax.swing.JLabel();
        rdopharmacymanager = new javax.swing.JRadioButton();
        rdopharmacist = new javax.swing.JRadioButton();
        rdocashier = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel2.setText("Username:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel3.setText("Password:");

        txtusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusernameActionPerformed(evt);
            }
        });

        txtpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpasswordActionPerformed(evt);
            }
        });

        login.setText("Log in");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        lbllog.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        lbllog.setText("LoginForm");
        lbllog.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rdopharmacymanager.setText("Pharmacy Manager");

        rdopharmacist.setText("Pharmacist");

        rdocashier.setText("Cashier");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(rdopharmacymanager)
                        .addGap(44, 44, 44)
                        .addComponent(rdopharmacist)
                        .addGap(47, 47, 47)
                        .addComponent(rdocashier))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtusername, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(txtpassword))))
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbllog)
                .addGap(179, 179, 179))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lbllog)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdopharmacymanager)
                    .addComponent(rdopharmacist)
                    .addComponent(rdocashier))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login)
                    .addComponent(exit))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtusernameActionPerformed

    private void txtpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpasswordActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        try {

            String username = txtusername.getText();
            String pass = txtpassword.getText();
            String type = "";
            
            if (rdopharmacymanager.isSelected()){
                type = rdopharmacymanager.getText();
            }
            else if (rdopharmacist.isSelected()){
                type = rdopharmacist.getText();
            }
            else{
                type = rdocashier.getText();
            }
            
            String str = "select * from user where username = '" + username + "' and password = PASSWORD('" + pass +"') and type = '" + type + "'";
            
            Table t = DB.db.getTableData(str);
            
            if (t.Items.length != 0){
                if (type.equals("Pharmacist")){
                    this.dispose();
                    Tool.openForm(new frmPharmacistMain(Integer.parseInt((String)t.Items[0][0]),(String)t.Items[0][1],(String)t.Items[0][6]));
                }
                else if(type.equals("Cashier")){
                    this.dispose();
                    Tool.openForm(new frmCashierMain(Integer.parseInt((String)t.Items[0][0]),(String)t.Items[0][1],(String)t.Items[0][6]));
                }
                else{
                    this.dispose();
                    Tool.openForm(new frmManagerMain(Integer.parseInt((String)t.Items[0][0]),(String)t.Items[0][1],(String)t.Items[0][6])); 
                }
                
            }
            else{
                Tool.msgBox("Login Data is not correct...");
                txtusername.setText("");
                txtpassword.setText("");
            }

        }
        catch (Exception ex){
            Tool.msgBox("DataBase is not opened...");
        }
    }//GEN-LAST:event_loginActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);

    }//GEN-LAST:event_exitActionPerformed
    DrugsReport DReport = new DrugsReport();
    TransactionsReport TReport = new TransactionsReport();
    
    private static long getDateDiff(String start_date, String end_date, TimeUnit timeUnit) throws ParseException {
        
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
         
         Date d1 = sdf.parse(start_date); 
         Date d2 = sdf.parse(end_date);
         long diffInMillies = d2.getTime() - d1.getTime();
         
         return timeUnit.convert(diffInMillies,TimeUnit.MILLISECONDS);
    }
    
    private void checkTransReport(){
        
        try {
        int start = 0;
        int firstID = 0;
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        SimpleDateFormat f1 = new SimpleDateFormat("yyyy-MM-dd");
        String Cpoint2 = " 17:00:00";
        
        String str = "select reftime from user where userid = 1";
        Tool.Table t = DB.db.getTableData(str);
        
        String refTime = (String)t.Items[0][0]; // 2021-01-01 00:00:00
        Date ref = f.parse(refTime);
        Date d = new Date();
        String currentTime = f.format(d);
        
        long noOfHours = getDateDiff(refTime, currentTime, TimeUnit.HOURS);
                   
        for (int i = 0 ; i < noOfHours; i++){
            ref.setHours(ref.getHours()+1);
            
            if (ref.getHours() == 17){
                String sqlstr = "select * from transaction where time <= '" + f1.format(ref) + Cpoint2 + "'";
                Tool.Table t2 = DB.db.getTableData(sqlstr);
                if (t2.Items.length != 0){
                   String autonum = TReport.getAutoNumber();
                   TReport.setReportID(Integer.parseInt(autonum));
                   TReport.setTime(f1.format(ref) + Cpoint2);
                   TReport.addTransReport(sqlstr);
                   
                   String strUpdate = "update user set " + "reftime = '" + f.format(ref) +"' where userid = 1";
                   DB.db.runNonQuery(strUpdate);
                   
                   if (start == 0){
                      firstID =  Integer.parseInt(autonum);
                      start = 1;
                   }
                }
            }
        }
          
        if (start != 0){
            String select = "select firsttran from user where userid = 1";
            Table tb = DB.db.getTableData(select);
            if (Integer.parseInt((String)tb.Items[0][0]) == 0){
                String strUpdate = "update user set " + "firsttran = " + firstID +" where userid = 1";
                DB.db.runNonQuery(strUpdate);
            }
           
        }
        
        } catch (ParseException ex) {
            Tool.msgBox(ex.getMessage());
        }
    }
    
    private void checkDrugsReport(){
        
        try {
            
        int start = 0;
        int firstID = 0;
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        SimpleDateFormat f1 = new SimpleDateFormat("yyyy-MM-dd");
        String Cpoint1 = " 08:00:00";
        String Cpoint2 = " 17:00:00";
        
        String str = "select time from user where userid = 1";
        Tool.Table t = DB.db.getTableData(str);
        
        String refTime = (String)t.Items[0][0]; // 2021-01-01 00:00:00
        Date ref = f.parse(refTime);
        Date d = new Date();
        String currentTime = f.format(d);
        
        long noOfHours = getDateDiff(refTime, currentTime, TimeUnit.HOURS);
                   
        for (int i = 0 ; i < noOfHours; i++){
            ref.setHours(ref.getHours()+1);
            if (ref.getHours() == 8){
                String sql = "select * from drug where time <= '" + f1.format(ref) + Cpoint1 + "'";
                Tool.Table t1 = DB.db.getTableData(sql);
                if (t1.Items.length != 0){
                   String autonum = DReport.getAutoNumber();
                   DReport.setReportID(Integer.parseInt(autonum));
                   DReport.setTime(f1.format(ref) + Cpoint1);
                   DReport.addDrugReport(sql);
                   
                   String strUpdate = "update user set " + "time = '" + f.format(ref) +"' where userid = 1";
                   DB.db.runNonQuery(strUpdate);
                   
                   if (start == 0){
                      firstID =  Integer.parseInt(autonum);
                      start = 1;
                   }
                   
                }    
            }
            else if (ref.getHours() == 17){
                String sqlstr = "select * from drug where time <= '" + f1.format(ref) + Cpoint2 + "'";
                Tool.Table t2 = DB.db.getTableData(sqlstr);
                if (t2.Items.length != 0){
                   String autonum = DReport.getAutoNumber();
                   DReport.setReportID(Integer.parseInt(autonum));
                   DReport.setTime(f1.format(ref) + Cpoint2);
                   DReport.addDrugReport(sqlstr);
                   
                   String strUpdate = "update user set " + "time = '" + f.format(ref) +"' where userid = 1";
                   DB.db.runNonQuery(strUpdate);
                   
                   if (start == 0){
                      firstID =  Integer.parseInt(autonum);
                      start = 1;
                   }
                }
            }
        }
         
        if (start != 0){
            String select = "select firstdrug from user where userid = 1";
            Table tb = DB.db.getTableData(select);
            if (Integer.parseInt((String)tb.Items[0][0]) == 0){
                String strUpdate = "update user set " + "firstdrug = " + firstID +" where userid = 1";
                DB.db.runNonQuery(strUpdate);
            }
           
        }
        } catch (ParseException ex) {
            Tool.msgBox(ex.getMessage());
        }
        
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       btngroup.add(rdocashier);
       btngroup.add(rdopharmacist);
       btngroup.add(rdopharmacymanager);
       rdopharmacymanager.setSelected(true);
 
       checkDrugsReport();
       checkTransReport();
   
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btngroup;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbllog;
    private javax.swing.JButton login;
    private javax.swing.JRadioButton rdocashier;
    private javax.swing.JRadioButton rdopharmacist;
    private javax.swing.JRadioButton rdopharmacymanager;
    private javax.swing.JTextField txtpassword;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
